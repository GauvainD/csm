# This Dockerfile is used for building manylinux wheels of CSM.
#
# Then run it to save the generated wheels c:\temp. Just change the mount point to
# any other directory you want.
#
#    docker build -f Dockerfile.manylinux . -t csm-manylinux:latest
#    docker run --rm --name csm-manylinux -v c:\temp:/external csm-manylinux:latest
#
# Note: DO NOT PUSH THIS TO Dockerhub - it makes no sense


FROM quay.io/pypa/manylinux_2_24_x86_64

# Install openbabel
RUN apt update
RUN apt install -y --no-install-recommends \
  libeigen3-dev \
  swig \
  cmake \
  libxml2-dev \
  zlib1g-dev
RUN apt install -y wget

# Compile our own copy of openbabel with no python binding, adapted from https://hub.docker.com/r/harryjubb/openbabel-python/~/dockerfile/
RUN mkdir /openbabel
WORKDIR /openbabel

RUN wget --no-check-certificate https://github.com/openbabel/openbabel/archive/refs/tags/openbabel-3-1-1.tar.gz
RUN tar -xzf openbabel-3-1-1.tar.gz
RUN mkdir /build
WORKDIR /build
RUN cmake ../openbabel/openbabel-openbabel-3-1-1
RUN make install
ENV LD_LIBRARY_PATH=/usr/local/lib

# Now - move on to creating the wheel
WORKDIR /src

COPY ./requirements.linux.txt /src/requirements.txt
# Install all requirements for all Python versions
RUN /opt/python/cp37-cp37m/bin/pip install -r requirements.txt
RUN /opt/python/cp38-cp38/bin/pip install -r requirements.txt
RUN /opt/python/cp39-cp39/bin/pip install -r requirements.txt
RUN /opt/python/cp310-cp310/bin/pip install -r requirements.txt

# And finally, the dplus-api source files.
COPY . /src

# Prepare for building the wheel - precompile pyx files and move header files around
RUN /opt/python/cp38-cp38/bin/python setup.py prepare

# Now we can build all the wheels
RUN /opt/python/cp38-cp38/bin/pip wheel .
RUN /opt/python/cp37-cp37m/bin/pip wheel .
RUN /opt/python/cp39-cp39/bin/pip wheel .
RUN /opt/python/cp310-cp310/bin/pip wheel .

RUN mkdir /wheels
RUN find . -name "csm*whl" -exec auditwheel repair {} -w /wheels \;

ENTRYPOINT [ "cp", "-r", "/wheels", "/external/csm-wheels" ]